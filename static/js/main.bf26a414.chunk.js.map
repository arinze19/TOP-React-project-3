{"version":3,"sources":["components/layout/Header.js","components/cards/CardItem.js","components/cards/CardList.js","helper-functions/App/randomPicker.js","components/App/App.js","index.js"],"names":["header","score","className","src","alt","currentScore","highScore","cardItem","pokemon","imgUrl","name","cardList","pokemonsList","pokemons","map","idx","CardItem","randomPicker","level","pokemonCatalog","counter","boundary","newArray","randomItem","Math","floor","random","length","push","initialScore","App","useState","setPokemons","useEffect","fetch","then","result","json","data","results","forEach","item","idxPad","toString","padStart","newPokemon","catalog","randomPokemons","catch","err","console","log","Header","CardList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAoBeA,MAlBf,YAA4B,IAAVC,EAAS,EAATA,MAChB,OACE,yBAAQC,UAAU,mBAAlB,UACE,sBAAKA,UAAU,yBAAf,UACE,qBAAKC,IAAI,YAAYC,IAAI,cACzB,8CAGF,qBAAIF,UAAU,+BAAd,UACE,8CAAiBD,EAAMI,gBACvB,4CACY,mBAAGH,UAAU,gBADzB,KAC8CD,EAAMK,oB,MCD7CC,MAVf,YAAgC,IAAZC,EAAW,EAAXA,QAClB,OACE,sBAAKN,UAAU,OAAf,UACE,qBAAKC,IAAKK,EAAQC,OAAQL,IAAKI,EAAQE,OACvC,uBACA,qBAAKR,UAAU,4BAAf,SAA4CM,EAAQE,W,MCI3CC,MARf,YAAiC,IACzBC,EADwB,EAAZC,SACYC,KAAI,SAACN,EAASO,GAAV,OAChC,cAACC,EAAD,CAAUR,QAASA,GAAcO,MAGnC,OAAO,qBAAKb,UAAU,sBAAf,SAAsCU,KCYhCK,MAdf,SAAsBC,EAAOC,GAK3B,IAJA,IAAIC,EAAa,EACXC,EAAmB,EAARH,EACXI,EAAW,GAEHF,EAAUC,EAAUD,IAAW,CAC3C,IACMG,EAAaJ,EADAK,KAAKC,MAAMD,KAAKE,SAAWP,EAAeQ,SAG7DL,EAASM,KAAKL,GAGhB,OAAOD,GCRHO,G,MAAe,CACnBxB,aAAc,EACdC,UAAW,IAGTa,EAAiB,GAqCNW,MAnCf,WAAgB,IAAD,EACmBC,mBAASF,GAD5B,mBACN5B,EADM,aAEmB8B,mBALb,IAGN,mBAENb,EAFM,aAGmBa,mBAAS,KAH5B,mBAGNlB,EAHM,KAGImB,EAHJ,KA2Bb,OAtBAC,qBAAU,WACRC,MAAM,0DACHC,MAAK,SAACC,GAAD,OAAYA,EAAOC,UACxBF,MAAK,SAACG,GAAD,OAAYA,EAAKC,WACtBJ,MAAK,SAAAI,GASJ,OARAA,EAAQC,SAAQ,SAACC,EAAM1B,GACrB,IAAM2B,GAAc3B,EAAM,GAAG4B,WAAWC,SAAS,EAAG,KAC9CC,EAAa,CACjBnC,KAAM+B,EAAK/B,KACXD,OAAO,2DAAD,OAA6DiC,EAA7D,SAERvB,EAAeS,KAAKiB,MAEf1B,KAERgB,MAAK,SAAAW,GAAO,OAAI7B,EAAaC,EAAO4B,MACpCX,MAAK,SAAAY,GAAc,OAAIf,EAAYe,MACnCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,IAKD,sBAAK/C,UAAU,MAAf,UACE,cAACkD,EAAD,CAAQnD,MAAOA,IACf,cAACoD,EAAD,CAAUxC,SAAUA,Q,MCzC1ByC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bf26a414.chunk.js","sourcesContent":["import \"../../styles/layout/header.css\";\r\n\r\nfunction header({ score }) {\r\n  return (\r\n    <header className=\"header-container\">\r\n      <div className=\"header-container__logo\">\r\n        <img src=\"/logo.png\" alt=\"poke-memo\" />\r\n        <h1>Poke Memo</h1>\r\n      </div>\r\n\r\n      <ul className=\"header-container__score-info\">\r\n        <li>Your Score: {score.currentScore}</li>\r\n        <li>\r\n          High Score<i className=\"las la-star\"></i>: {score.highScore}\r\n        </li>\r\n      </ul>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default header;\r\n","import \"../../styles/cards/card-item.css\";\r\n\r\nfunction cardItem({ pokemon }) {\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={pokemon.imgUrl} alt={pokemon.name} />\r\n      <hr />\r\n      <div className=\"card-item-container__info\">{pokemon.name}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default cardItem;\r\n","import CardItem from \"./CardItem\";\r\nimport \"../../styles/cards/card-list.css\"\r\n\r\nfunction cardList({ pokemons }) {\r\n  const pokemonsList = pokemons.map((pokemon, idx) => (\r\n    <CardItem pokemon={pokemon} key={idx} />\r\n  ));\r\n\r\n  return <div className=\"card-list-container\">{pokemonsList}</div>;\r\n}\r\n\r\nexport default cardList;\r\n","/**\r\n * generate random values in new array from a passed in array\r\n * @param {Number} level the number of elements in new array * 2\r\n * @param {Array} pokemonCatalog array to be processed\r\n */\r\n\r\nfunction randomPicker(level, pokemonCatalog) {\r\n  let counter    = 0;\r\n  const boundary = level * 2;\r\n  const newArray = [];\r\n\r\n  for (counter; counter < boundary; counter++) {\r\n    const randomInt  = Math.floor(Math.random() * pokemonCatalog.length);\r\n    const randomItem = pokemonCatalog[randomInt];\r\n\r\n    newArray.push(randomItem);\r\n  }\r\n\r\n  return newArray;\r\n}\r\nexport default randomPicker;\r\n","import { useState, useEffect } from \"react\";\nimport Header       from \"../layout/Header\";\nimport CardList     from \"../cards/CardList\";\nimport randomPicker from \"../../helper-functions/App/randomPicker\"\nimport \"../../styles/App/App.css\";\n\n//  ============ initial state values\nconst genRandomPokemonList = (level) => {\n  const randomInt = Math.random() * level\n}\nconst initialScore = {\n  currentScore: 0,\n  highScore: 0,\n};\nconst initialLevel = 1;\nlet pokemonCatalog = [];\n\nfunction App() {\n  const [score, setScore]       = useState(initialScore);\n  const [level, setLevel]       = useState(initialLevel);\n  const [pokemons, setPokemons] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://pokeapi.co/api/v2/pokemon?limit=100&offset=200\")\n      .then((result) => result.json())\n      .then((data)   => data.results)\n      .then(results  => {\n        results.forEach((item, idx) => {\n          const idxPad     = (idx + 1).toString().padStart(3, \"0\")\n          const newPokemon = {\n            name: item.name,\n            imgUrl: `https://assets.pokemon.com/assets/cms2/img/pokedex/full/${idxPad}.png`\n          }\n          pokemonCatalog.push(newPokemon)\n        })\n        return pokemonCatalog\n      })\n      .then(catalog => randomPicker(level, catalog))\n      .then(randomPokemons => setPokemons(randomPokemons))\n      .catch(err => console.log(err))\n  }, []);\n\n  \n\n  return (\n    <div className=\"App\">\n      <Header score={score} />\n      <CardList pokemons={pokemons} />\n    </div>\n  );\n}\n\nexport default App;\n","import React    from 'react';\nimport ReactDOM from 'react-dom';\nimport App      from './components/App/App';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}