{"version":3,"sources":["components/Card/index.tsx","components/Header/index.tsx","components/Loader/index.tsx","components/Button/index.tsx","components/Modal/index.tsx","utils/index.tsx","App.tsx","index.tsx"],"names":["CardItem","pokemon","handleClick","CardItemContainer","onClick","id","src","url","alt","name","CardContainer","styled","div","CardList","Card","pokemons","level","map","idx","HeaderContainer","header","Logo","Header","score","highScore","useMemo","localStorage","getItem","parseInt","className","LoaderContainer","Spinner","Loader","Container","button","Button","children","Overlay","open","ModalMain","Modal","onClose","selector","catalog","cache","Set","arr","i","Math","floor","random","length","has","push","add","getPokemons","a","offset","axios","get","data","results","item","idxPad","slice","toString","padStart","isClicked","App","useState","state","setState","setPokemons","isLoading","setIsLoading","modal","setModal","useEffect","console","log","setTimeout","findIndex","JSON","parse","setItem","stringify","every","randomizer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b20a06b4.chunk.js","sourcesContent":["import styled from 'styled-components';\n\n// Types\nimport { Pokemon } from '../../types';\n\nexport interface CardProps {\n  pokemons: Pokemon[];\n  level: number;\n  handleClick: (id: number) => void;\n}\n\nexport interface CardItemProps {\n  pokemon: Pokemon;\n  handleClick: (id: number) => void;\n}\n\nconst Card = ({ pokemons, level, handleClick }: CardProps) => {\n  return (\n    <CardContainer>\n      <h2>Level: {level}</h2>\n      <CardList>\n        {pokemons.map((pokemon, idx) => (\n          <CardItem pokemon={pokemon} key={idx} handleClick={handleClick} />\n        ))}\n      </CardList>\n    </CardContainer>\n  );\n};\n\nconst CardItem = ({ pokemon, handleClick }: CardItemProps) => {\n  return (\n    <CardItemContainer\n      onClick={() => handleClick(pokemon.id)}\n      data-testid='card-item'\n    >\n      <img src={pokemon.url} alt={pokemon.name} />\n      <hr />\n      <span data-testid='card-item-name'>{pokemon.name}</span>\n    </CardItemContainer>\n  );\n};\n\n// Styles\nconst CardContainer = styled.div`\n  h2 {\n    text-align: center;\n  }\n`;\n\nconst CardItemContainer = styled.div`\n  padding: 16px;\n  text-align: center;\n  display: flex;\n  border-radius: 8px;\n  flex-direction: column;\n  gap: 4px;\n  background-color: #ffd50074;\n  cursor: pointer;\n  margin: 1em;\n  transition: all 0.3s ease-in-out;\n\n  img {\n    width: 120px;\n    height: 120px;\n  }\n\n  hr {\n    border: none;\n    height: 1px;\n    background-color: #10162f;\n  }\n\n  &:hover {\n    transform: scale(1.1);\n  }\n\n  @media (max-width: 768px) {\n    img {\n      width: 80px;\n      height: 80px;\n    }\n  }\n`;\n\nconst CardList = styled.div`\n  display: flex;\n  width: 50%;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 2rem auto;\n  max-width: 1220px;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nexport default Card;\n","import { useMemo } from 'react';\n\nimport styled from 'styled-components';\n\nexport interface HeaderProps {\n  score: number;\n}\n\nfunction Header({ score }: HeaderProps) {\n  const highScore = useMemo(() => {\n    const score = localStorage.getItem('high_score');\n    return score ? parseInt(score) : 0;\n  }, [score]);\n\n  return (\n    <HeaderContainer>\n      <Logo>\n        <img\n          src='https://res.cloudinary.com/dmrib2gtg/image/upload/v1697921863/logo_ktdpcf.png'\n          alt='poke-memo'\n        />\n        <h1>Poke Memo</h1>\n      </Logo>\n\n      <ul>\n        <li data-testid='current-score'>\n          <span>Your Score: {score}</span>\n        </li>\n        <li data-testid='high-score'>\n          <span>\n            High Score<i className='las la-star'></i>: {highScore}\n          </span>\n        </li>\n      </ul>\n    </HeaderContainer>\n  );\n}\n\n// Styles\nconst HeaderContainer = styled.header`\n  background-color: #10162f;\n  padding: 0.5rem;\n  color: white;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  .la-star {\n    color: #ffd500;\n  }\n\n  ul {\n    margin-right: 2rem;\n    padding: 0;\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n\n    ul {\n      display: flex;\n      justify-content: space-between;\n      width: 100%;\n      margin: 0;\n      padding: 0 1rem;\n    }\n  }\n`;\n\nconst Logo = styled.div`\n  display: flex;\n  align-items: center;\n\n  img {\n    width: 120px;\n    height: 100px;\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    justify-content: center;\n\n    h1 {\n      display: none;\n    }\n  }\n`;\n\nexport default Header;\n","// Styles\nimport styled from 'styled-components';\n\nfunction Loader() {\n  return (\n    <LoaderContainer>\n      <Spinner>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </Spinner>\n    </LoaderContainer>\n  );\n}\n\n// Styles\nconst LoaderContainer = styled.div`\n  display: flex;\n  width: 50%;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 2rem auto;\n  max-width: 1220px;\n`;\n\nconst Spinner = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n\n  div {\n    box-sizing: border-box;\n    display: block;\n    position: absolute;\n    width: 64px;\n    height: 64px;\n    margin: 8px;\n    border: 8px solid #3a10e5;\n    border-radius: 50%;\n    animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n    border-color: #3a10e5 transparent transparent transparent;\n\n    &:nth-child(1) {\n      animation-delay: -0.45s;\n    }\n\n    &:nth-child(2) {\n      animation-delay: -0.3s;\n    }\n\n    &:nth-child(3) {\n      animation-delay: -0.15s;\n    }\n\n    @keyframes lds-ring {\n      0% {\n        transform: rotate(0deg);\n      }\n      100% {\n        transform: rotate(360deg);\n      }\n    }\n  }\n`;\n\nexport default Loader;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\n// Types\nexport interface ButtonProps {\n  children: React.ReactNode;\n  onClick: () => void;\n}\n\nconst Button = ({ children, onClick }: ButtonProps) => {\n  return <Container onClick={onClick}>{children}</Container>;\n};\n\n// Styles\nconst Container = styled.button`\n  border: none;\n  border-radius: 4px;\n  padding: 8px;\n  color: #fff;\n  width: 100%;\n  background-color: #5001d0;\n  font-weight: bold;\n`;\n\nexport default Button;\n","import React, { useCallback, useMemo } from 'react';\n\nimport Button from '@components/Button';\n\nimport styled from 'styled-components';\n\n// Types\nexport interface ModalProps {\n  open: boolean;\n  header: string;\n  children: React.ReactNode;\n  onClose: () => void;\n}\n\nconst Modal = ({ children, header, onClose, open }: ModalProps) => {\n  return (\n    <>\n      <Overlay open={open} onClick={onClose} />\n      <ModalMain open={open}>\n        <div className='modal-header'>\n          <h2>{header}</h2>\n        </div>\n        <div className='modal-children'>{children}</div>\n        <div className='modal-footer'>\n          <Button onClick={onClose}>Close</Button>\n        </div>\n      </ModalMain>\n    </>\n  );\n};\n\n// Styled\nconst Overlay = styled.div<{ open: boolean }>`\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: grid;\n  place-content: center;\n  width: 100%;\n  height: 100%;\n  transition: all 0.3s ease-in-out;\n\n  ${({ open }) => {\n    if (open) {\n      return `\n        background-color: rgba(0, 0, 0, 0.5);\n        pointer-events: all;\n        opacity: 1;\n      `;\n    } else {\n      return `\n        background-color: rgba(0, 0, 0, 0);\n        pointer-events: none;\n        opacity: 0;\n      `;\n    }\n  }}\n`;\n\nconst ModalMain = styled.div<{ open: boolean }>`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  position: absolute;\n  background-color: white;\n  left: 50%;\n  top: 25%;\n  width: 80%;\n  max-width: 500px;\n  border-radius: 4px;\n  padding: 1rem;\n  text-align: center;\n  transition: all 0.5s ease-in-out;\n\n  ${({ open }) => {\n    if (open) {\n      return `\n        transform: translate(-50%, 0);\n      `;\n    } else {\n      return `\n        transform: translate(-50%, -100%);\n        opacity: 0;\n        pointer-events: none;\n      `;\n    }\n  }}\n`;\n\nexport default Modal;\n","import axios from 'axios';\nimport { Pokemon, PokemonAPIResponse } from '../types';\n\nexport function selector(catalog: Pokemon[], level: number) {\n  // create a set to keep track of selected indexes\n  const cache = new Set();\n\n  // create return pokemon array\n  const arr = [];\n\n  for (let i = 0; i < level * 2; i++) {\n    // generate a random integer\n    let id = Math.floor(Math.random() * catalog.length);\n\n    // if the random integer is already in the set, generate another random integer\n    while (cache.has(id)) {\n      id = Math.floor(Math.random() * catalog.length);\n    }\n\n    // add the pokemon to the return array and the set\n    arr.push(catalog[id]);\n    cache.add(id);\n  }\n\n  return arr;\n}\n\nexport function randomizer(pokemons: Pokemon[]): Pokemon[] {\n  // create a return array\n  const arr = [];\n\n  // create a set to keep track of selected indexes\n  const cache = new Set();\n\n  for (let i = 0; i < pokemons.length; i++) {\n    let id = Math.floor(Math.random() * pokemons.length);\n\n    // if the random integer is already in the set, generate another random integer\n    while (pokemons[id].id === pokemons[i].id || cache.has(id)) {\n      id = Math.floor(Math.random() * pokemons.length);\n    }\n\n    // add the pokemon to the return array and the set\n    arr[id] = pokemons[i];\n    cache.add(id);\n  }\n\n  return arr;\n}\n\nexport async function fetchPokemonsFromAPI(url: string) {\n  try {\n    const { data } = await axios.get<PokemonAPIResponse>(url);\n\n    return formatPokemons(data.results);\n  } catch (err) {\n    throw new Error('Something went wrong');\n  }\n}\n\nexport function formatPokemons(pokemons?: Pokemon[]) {\n  if (!pokemons) return [];\n\n  const clone = [...pokemons];\n\n  return clone.map((pokemon, id) => {\n    const idx = pokemon.url.slice(34, -1).toString().padStart(3, '0');\n\n    pokemon.id = id;\n    pokemon.url = `https://assets.pokemon.com/assets/cms2/img/pokedex/full/${idx}.png`;\n    pokemon.isClicked = false;\n    return pokemon;\n  });\n}\n\nexport const getPokemons = async (level: number) => {\n  const offset = Math.floor(Math.random() * 80); // pokeapi has 1154 pokemons, so enabling pagination offset of up to 1000?\n  const { data } = await axios.get(\n    `https://pokeapi.co/api/v2/pokemon?limit=${level + 10}&offset=${\n      offset * 10\n    }`\n  );\n\n  const pokemons: Pokemon[] = data.results.map((item: Pokemon, idx: number) => {\n    const idxPad = item.url.slice(34, -1).toString().padStart(3, '0'); // this is to account for the lack accurate index of each pokemon when fetching as a list. hence some manipulation to get the appropiate image\n    item.id = idx;\n    item.url = `https://assets.pokemon.com/assets/cms2/img/pokedex/full/${idxPad}.png`;\n    item.isClicked = false;\n\n    return item;\n  });\n\n  return selector(pokemons, level);\n};\n","import { useState, useEffect } from 'react';\nimport Card from '@components/Card';\nimport Header from '@components/Header';\nimport Loader from '@components/Loader';\nimport Modal from '@components/Modal';\nimport { randomizer, getPokemons } from './utils';\nimport { Pokemon } from './types';\n\nfunction App() {\n  const [state, setState] = useState({ score: 0, level: 1 });\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [modal, setModal] = useState('');\n\n  const handleClick = (id: number) => {\n    // find index of clicked pokemon\n    const idx = pokemons.findIndex((pokemon: Pokemon) => pokemon.id === id);\n\n    // end game if selected pokemon has been clicked\n    if (pokemons[idx].isClicked) {\n      setModal('game_over');\n      return;\n    }\n\n    pokemons[idx].isClicked = true;\n    state.score = state.score + 1;\n\n    // get high score from local storage\n    const highScore = localStorage.getItem('high_score')\n      ? JSON.parse(localStorage.getItem('high_score')!)\n      : 0;\n\n    // if current score is higher than high score, increment high score\n    if (state.score >= highScore) {\n      localStorage.setItem('high_score', JSON.stringify(state.score));\n    } else {\n      // else increment current score\n      setState({\n        ...state,\n      });\n    }\n\n    // check if all pokemons have been clicked\n    if (pokemons.every((pokemon) => pokemon.isClicked === true)) {\n      // upgrade level if all pokemons have been clicked\n      setState({\n        ...state,\n        level: state.level + 1,\n      });\n    } else {\n      // shuffle pokemons and set pokemon state\n      setPokemons(randomizer(pokemons));\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n\n      try {\n        const pokemons = await getPokemons(state.level);\n        setPokemons(pokemons);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [state.level]);\n\n  // show game play modal for 1.2 seconds\n  useEffect(() => {\n    setTimeout(() => {\n      setModal('game_play');\n    }, 1200);\n  }, []);\n\n  return (\n    <>\n      <Header score={state.score} />\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <Card\n          pokemons={pokemons}\n          level={state.level}\n          handleClick={handleClick}\n        />\n      )}\n\n      <Modal\n        header='Game Over'\n        open={modal === 'game_over'}\n        onClose={() => {\n          setModal('');\n          setState({ score: 0, level: 1 });\n        }}\n      >\n        This game is over. Your score is {state.score}. Good game!\n      </Modal>\n\n      <Modal\n        header='Game Play'\n        open={modal === 'game_play'}\n        onClose={() => setModal('')}\n      >\n        This game tests your memory. Click on a pokemon to earn points. If you\n        click on the same pokemon twice, the game is over. If you click on all\n        pokemons, you level up. Good luck!\n      </Modal>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}