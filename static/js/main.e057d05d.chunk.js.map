{"version":3,"sources":["utils/index.tsx","components/Card/index.tsx","components/Header/index.tsx","components/Loader/index.tsx","components/Button/index.tsx","components/Modal/index.tsx","components/Instructions/index.tsx","constants/index.ts","components/Timer/index.tsx","App.tsx","index.tsx"],"names":["selector","catalog","level","cache","Set","arr","i","id","Math","floor","random","length","has","push","add","getPokemons","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","offset","_yield$axios$get","data","pokemons","wrap","_context","prev","next","axios","get","concat","sent","results","map","item","idx","idxPad","url","slice","toString","padStart","isClicked","abrupt","stop","_x2","apply","arguments","CardItem","pokemon","handleClick","_jsxs","CardItemContainer","onClick","children","_jsx","src","alt","name","CardContainer","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","CardList","_templateObject3","Card","_ref","score","onChange","Actions","useMemo","handleChange","state","findIndex","modal","Object","assign","high_score","localStorage","getItem","JSON","parse","setItem","stringify","every","ShuffledPokemons","clone","_toConsumableArray","j","randomizer","HeaderContainer","header","Logo","Header","stored","className","LoaderContainer","Spinner","Loader","Container","button","Button","Overlay","open","ModalMain","_ref3","Modal","onClose","_Fragment","InstructionsContainer","Instructions","DEFAULT_VALUE","TimerContainer","Timer","loading","time","setTime","useState","useEffect","timerId","setInterval","clearTimeout","formatted_time","duration","moment","utc","asMilliseconds","format","App","queryClient","useQueryClient","setState","resetGame","invalidateQueries","isLoading","isFetching","useQuery","staleTime","Infinity","onSuccess","client","QueryClient","ReactDOM","createRoot","document","getElementById","render","QueryClientProvider","React","StrictMode"],"mappings":"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","file":"static/js/main.e057d05d.chunk.js","sourcesContent":["import axios from 'axios';\nimport { Pokemon, PokemonAPIResponse } from '../types';\n\nexport function selector(catalog: Pokemon[], level: number) {\n  // create a set to keep track of selected indexes\n  const cache = new Set();\n\n  // create return pokemon array\n  const arr = [];\n\n  for (let i = 0; i < level * 2; i++) {\n    // generate a random integer\n    let id = Math.floor(Math.random() * catalog.length);\n\n    // if the random integer is already in the set, generate another random integer\n    while (cache.has(id)) {\n      id = Math.floor(Math.random() * catalog.length);\n    }\n\n    // add the pokemon to the return array and the set\n    arr.push(catalog[id]);\n    cache.add(id);\n  }\n\n  return arr;\n}\n\nexport function randomizer(pokemons: Pokemon[]): Pokemon[] {\n  const clone = [...pokemons];\n\n  for (let i = clone.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [clone[i], clone[j]] = [clone[j], clone[i]];\n  }\n\n  return clone;\n}\n\nexport async function fetchPokemonsFromAPI(url: string) {\n  try {\n    const { data } = await axios.get<PokemonAPIResponse>(url);\n\n    return formatPokemons(data.results);\n  } catch (err) {\n    throw new Error('Something went wrong');\n  }\n}\n\nexport function formatPokemons(pokemons?: Pokemon[]) {\n  if (!pokemons) return [];\n\n  const clone = [...pokemons];\n\n  return clone.map((pokemon, id) => {\n    const idx = pokemon.url.slice(34, -1).toString().padStart(3, '0');\n\n    pokemon.id = id;\n    pokemon.url = `https://assets.pokemon.com/assets/cms2/img/pokedex/full/${idx}.png`;\n    pokemon.isClicked = false;\n    return pokemon;\n  });\n}\n\nexport const getPokemons = async (level: number) => {\n  const offset = Math.floor(Math.random() * 80); // pokeapi has 1154 pokemons, so enabling pagination offset of up to 1000?\n  const { data } = await axios.get(\n    `https://pokeapi.co/api/v2/pokemon?limit=${level + 10}&offset=${\n      offset * 10\n    }`\n  );\n\n  const pokemons: Pokemon[] = data.results.map((item: Pokemon, idx: number) => {\n    const idxPad = item.url.slice(34, -1).toString().padStart(3, '0'); // this is to account for the lack accurate index of each pokemon when fetching as a list. hence some manipulation to get the appropiate image\n    item.id = idx;\n    item.url = `https://assets.pokemon.com/assets/cms2/img/pokedex/full/${idxPad}.png`;\n    item.isClicked = false;\n\n    return item;\n  });\n\n  return selector(pokemons, level);\n};\n","import { useMemo } from 'react';\nimport styled from 'styled-components';\n\nimport { randomizer } from '../../utils';\n\n// Types\nimport { type Pokemon, type StoreState } from '../../types';\n\nexport interface CardItemProps {\n  pokemon: Pokemon;\n  handleClick: (id: number) => void;\n}\n\nexport interface CardProps {\n  level: number;\n  score: number;\n  pokemons: Pokemon[];\n  onChange: (data: Partial<StoreState>) => void;\n}\n\nconst Card = ({ level, score, pokemons, onChange }: CardProps) => {\n  const Actions = useMemo(() => {\n    return {\n      handleChange: (id: number) => {\n        const state = {\n          pokemons: [...pokemons],\n          score: score,\n        };\n\n        // find index of clicked pokemon\n        const idx = pokemons.findIndex((pokemon) => pokemon.id === id);\n\n        // dispatch game over modal\n        if (state.pokemons[idx].isClicked)\n          return onChange({ modal: 'game_over' });\n\n        state.pokemons[idx] = Object.assign(pokemons[idx], { isClicked: true });\n\n        // get high score from local storage\n        const high_score = localStorage.getItem('high_score')\n          ? JSON.parse(localStorage.getItem('high_score')!)\n          : 0;\n\n        state.score += 1;\n\n        // if current score is higher than high score, increment high score\n        if (state.score > high_score) {\n          localStorage.setItem('high_score', JSON.stringify(state.score));\n        }\n\n        // check if all pokemons have been clicked\n        if (state.pokemons.every((pokemon) => pokemon.isClicked === true))\n          return onChange({ level: level + 1, score: score + 1 });\n\n        onChange(state);\n      },\n    };\n  }, [score]);\n\n  /**\n   * Shuffled Pokemons\n   */\n  const ShuffledPokemons = useMemo(() => {\n    return randomizer(pokemons);\n  }, [score]);\n\n  return (\n    <CardContainer>\n      <h2>Level: {level}</h2>\n      <CardList>\n        {ShuffledPokemons.map((pokemon, idx) => (\n          <CardItem\n            pokemon={pokemon}\n            key={idx}\n            handleClick={() => Actions.handleChange(pokemon.id)}\n          />\n        ))}\n      </CardList>\n    </CardContainer>\n  );\n};\n\nconst CardItem = ({ pokemon, handleClick }: CardItemProps) => {\n  return (\n    <CardItemContainer onClick={() => handleClick(pokemon.id)}>\n      <img src={pokemon.url} alt={pokemon.name} />\n      <hr />\n      <span>{pokemon.name}</span>\n    </CardItemContainer>\n  );\n};\n\n// Styles\nconst CardContainer = styled.div`\n  h2 {\n    text-align: center;\n  }\n`;\n\nconst CardItemContainer = styled.div`\n  padding: 16px;\n  text-align: center;\n  display: flex;\n  border-radius: 8px;\n  flex-direction: column;\n  gap: 4px;\n  background-color: #ffd50074;\n  cursor: pointer;\n  margin: 1em;\n  transition: all 0.3s ease-in-out;\n\n  img {\n    width: 120px;\n    height: 120px;\n  }\n\n  hr {\n    border: none;\n    height: 1px;\n    background-color: #10162f;\n  }\n\n  &:hover {\n    transform: scale(1.1);\n  }\n\n  @media (max-width: 768px) {\n    img {\n      width: 80px;\n      height: 80px;\n    }\n  }\n`;\n\nconst CardList = styled.div`\n  display: flex;\n  width: 50%;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 2rem auto;\n  max-width: 1220px;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nexport default Card;\n","import { useMemo } from 'react';\nimport styled from 'styled-components';\n\ninterface HeaderProps {\n  score: number;\n}\n\nfunction Header({ score }: HeaderProps) {\n  const high_score = useMemo(() => {\n    const stored = localStorage.getItem('high_score');\n    return stored ? JSON.parse(stored) : 0;\n  }, [score]);\n\n  return (\n    <HeaderContainer>\n      <Logo>\n        <img\n          src='https://res.cloudinary.com/dmrib2gtg/image/upload/v1697921863/logo_ktdpcf.png'\n          alt='poke-memo'\n        />\n        <h1>Poke Memo</h1>\n      </Logo>\n\n      <ul>\n        <li>\n          <span>Your Score: {score}</span>\n        </li>\n        <li>\n          <span>\n            High Score<i className='las la-star'></i>: {high_score}\n          </span>\n        </li>\n      </ul>\n    </HeaderContainer>\n  );\n}\n\n// Styles\nconst HeaderContainer = styled.header`\n  background-color: #10162f;\n  padding: 0.5rem;\n  color: white;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  .la-star {\n    color: #ffd500;\n  }\n\n  ul {\n    margin-right: 2rem;\n    padding: 0;\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n\n    ul {\n      display: flex;\n      justify-content: space-between;\n      width: 100%;\n      margin: 0;\n      padding: 0 1rem;\n    }\n  }\n`;\n\nconst Logo = styled.div`\n  display: flex;\n  align-items: center;\n\n  img {\n    width: 120px;\n    height: 100px;\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    justify-content: center;\n\n    h1 {\n      display: none;\n    }\n  }\n`;\n\nexport default Header;\n","// Styles\nimport styled from 'styled-components';\n\nfunction Loader() {\n  return (\n    <LoaderContainer>\n      <Spinner>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </Spinner>\n    </LoaderContainer>\n  );\n}\n\n// Styles\nconst LoaderContainer = styled.div`\n  display: flex;\n  width: 50%;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 2rem auto;\n  max-width: 1220px;\n`;\n\nconst Spinner = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n\n  div {\n    box-sizing: border-box;\n    display: block;\n    position: absolute;\n    width: 64px;\n    height: 64px;\n    margin: 8px;\n    border: 8px solid #3a10e5;\n    border-radius: 50%;\n    animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n    border-color: #3a10e5 transparent transparent transparent;\n\n    &:nth-child(1) {\n      animation-delay: -0.45s;\n    }\n\n    &:nth-child(2) {\n      animation-delay: -0.3s;\n    }\n\n    &:nth-child(3) {\n      animation-delay: -0.15s;\n    }\n\n    @keyframes lds-ring {\n      0% {\n        transform: rotate(0deg);\n      }\n      100% {\n        transform: rotate(360deg);\n      }\n    }\n  }\n`;\n\nexport default Loader;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\n// Types\nexport interface ButtonProps {\n  children: React.ReactNode;\n  onClick: () => void;\n}\n\nconst Button = ({ children, onClick }: ButtonProps) => {\n  return <Container onClick={onClick}>{children}</Container>;\n};\n\n// Styles\nconst Container = styled.button`\n  border: none;\n  border-radius: 4px;\n  padding: 8px;\n  color: #fff;\n  width: 100%;\n  background-color: #5001d0;\n  font-weight: bold;\n`;\n\nexport default Button;\n","import styled from 'styled-components';\n\nimport Button from '@components/Button';\n\n// Types\nexport interface ModalProps {\n  open: boolean;\n  header: string;\n  children: React.ReactNode;\n  onClose: () => void;\n}\n\nconst Modal = ({ children, header, onClose, open }: ModalProps) => {\n  return (\n    <>\n      <Overlay open={open} onClick={onClose} />\n      <ModalMain open={open}>\n        <div className='modal-header'>\n          <h2>{header}</h2>\n        </div>\n        <div className='modal-children'>{children}</div>\n        <div className='modal-footer'>\n          <Button onClick={onClose}>Close</Button>\n        </div>\n      </ModalMain>\n    </>\n  );\n};\n\n// Styled\nconst Overlay = styled.div<{ open: boolean }>`\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: grid;\n  place-content: center;\n  width: 100%;\n  height: 100%;\n  transition: all 0.3s ease-in-out;\n\n  ${({ open }) => {\n    if (open) {\n      return `\n        background-color: rgba(0, 0, 0, 0.5);\n        pointer-events: all;\n        opacity: 1;\n      `;\n    } else {\n      return `\n        background-color: rgba(0, 0, 0, 0);\n        pointer-events: none;\n        opacity: 0;\n      `;\n    }\n  }}\n`;\n\nconst ModalMain = styled.div<{ open: boolean }>`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  position: absolute;\n  background-color: white;\n  left: 50%;\n  top: 25%;\n  width: 80%;\n  max-width: 500px;\n  border-radius: 4px;\n  padding: 1rem;\n  text-align: center;\n  transition: all 0.5s ease-in-out;\n\n  ${({ open }) => {\n    if (open) {\n      return `\n        transform: translate(-50%, 0);\n      `;\n    } else {\n      return `\n        transform: translate(-50%, -100%);\n        opacity: 0;\n        pointer-events: none;\n      `;\n    }\n  }}\n`;\n\nexport default Modal;\n","import styled from 'styled-components';\n\nimport { type StoreState } from '../../types';\n\ninterface InstructionsProps {\n  onChange: (data: Partial<StoreState>) => void;\n}\n\nconst Instructions = ({ onChange }: InstructionsProps) => {\n  return (\n    <InstructionsContainer>\n      <button onClick={() => onChange({ modal: 'game_play' })}>\n        Instructions\n      </button>\n    </InstructionsContainer>\n  );\n};\n\nconst InstructionsContainer = styled.div`\n  position: fixed;\n  bottom: 1rem;\n  left: 1rem;\n\n  button {\n    border: 1px solid #ffd500;\n    border-radius: 4px;\n    font-size: 0.85rem;\n    font-weight: bold;\n    padding: 4px 8px;\n    background-color: #ffd50074;\n  }\n`;\n\nexport default Instructions;\n","export const DEFAULT_VALUE = {\n  score: 0,\n  level: 1,\n  pokemons: [],\n  modal: '',\n};\n\nexport const TIME_LIMIT = 10;\n","import { useState, useEffect, useMemo } from 'react';\n\nimport moment from 'moment';\n\nimport styled from 'styled-components';\n\nimport { TIME_LIMIT } from '../../constants';\n\nimport { type StoreState } from '../../types';\n\n// types\ninterface TimerProps {\n  level: number;\n  modal: string;\n  loading: boolean;\n  onChange: (data: Partial<StoreState>) => void;\n}\n\nconst Timer = ({ level, modal, loading, onChange }: TimerProps) => {\n  const [time, setTime] = useState(TIME_LIMIT);\n\n  // Every Second deduct one\n  useEffect(() => {\n    const timerId = setInterval(() => {\n      // set time to time - 1\n      setTime((prev) => {\n        // if modal is open return or it's loading\n        if (modal || loading) return prev;\n\n        // if time is 0, game over\n        if (prev === 0) {\n          /**\n           * display modal\n           */\n          onChange({ modal: 'game_over' });\n          /**\n           * stop the timer\n           */\n          return 0;\n        }\n\n        // decrement time\n        return prev - 1;\n      });\n    }, 1000);\n\n    return () => clearTimeout(timerId);\n  }, [modal]);\n\n  // on level change, add some more seconds to the timer\n  useEffect(() => {\n    setTime((time + level) * 2);\n  }, [level]);\n\n  // when time is 0, game over\n  const formatted_time = useMemo(() => {\n    // Create a duration object\n    const duration = moment.duration(time, 'seconds');\n\n    // Format the duration as \"HH:mm\"\n    return moment.utc(duration.asMilliseconds()).format('mm:ss');\n  }, [time]);\n\n  return (\n    <TimerContainer>\n      <strong>{formatted_time}</strong>\n    </TimerContainer>\n  );\n};\n\nconst TimerContainer = styled.div`\n  position: fixed;\n  bottom: 1rem;\n  right: 1rem;\n  border-radius: 4px;\n  background-color: #ffd50074;\n  border: 1px solid #ffd500;\n  padding: 0.5rem 1rem;\n`;\n\nexport default Timer;\n","import { useState, useMemo } from 'react';\n\nimport { useQuery, useQueryClient } from 'react-query';\n\nimport { getPokemons } from './utils';\n\nimport Card from '@components/Card';\nimport Header from '@components/Header';\nimport Loader from '@components/Loader';\nimport Modal from '@components/Modal';\nimport Instructions from '@components/Instructions';\nimport Timer from '@components/Timer';\n\nimport { DEFAULT_VALUE } from './constants';\n\n// Types\nimport { type StoreState, type Pokemon } from './types';\n\nfunction App() {\n  const queryClient = useQueryClient();\n\n  const [state, setState] = useState<StoreState>(DEFAULT_VALUE);\n\n  // Actions\n  const Actions = useMemo(() => {\n    return {\n      onChange: (data: Partial<StoreState>) => {\n        setState((prev) => Object.assign({}, prev, data));\n      },\n      resetGame: () => {\n        setState(DEFAULT_VALUE);\n\n        queryClient.invalidateQueries();\n      },\n    };\n  }, [setState]);\n\n  // Query\n  // fetch pokemons from API\n  const { isLoading, isFetching } = useQuery<Pokemon[]>(\n    `https://pokeapi.co/api/v2/pokemon?limit=${state.level + 10}`,\n    () => getPokemons(state.level),\n    {\n      staleTime: Infinity,\n      onSuccess: (data) => {\n        // set pokemons in state\n        Actions.onChange({ pokemons: data });\n      },\n    }\n  );\n\n  return (\n    <>\n      <Header score={state.score} />\n\n      {isLoading || isFetching ? (\n        <Loader />\n      ) : (\n        <Card\n          level={state.level}\n          score={state.score}\n          pokemons={state.pokemons}\n          onChange={Actions.onChange}\n        />\n      )}\n\n      <Instructions onChange={Actions.onChange} />\n\n      <Timer\n        level={state.level}\n        modal={state.modal}\n        loading={isLoading || isFetching}\n        onChange={Actions.onChange}\n      />\n\n      <Modal\n        header='Game Over'\n        open={state.modal === 'game_over'}\n        onClose={() => Actions.resetGame()}\n      >\n        This game is over. Your score is {state.score}. Good game!\n      </Modal>\n\n      <Modal\n        header='Game Play'\n        open={state.modal === 'game_play'}\n        onClose={() => Actions.onChange({ modal: '' })}\n      >\n        This game tests your memory. Click on a pokemon to earn points. If you\n        click on the same pokemon twice, the game is over. If you click on all\n        pokemons exactly once, you level up. Good luck!\n      </Modal>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nimport App from './App';\n\nimport './index.css';\n\nconst client = new QueryClient();\n\nconst root = ReactDOM.createRoot(document.getElementById('root')!);\n\nroot.render(\n  <QueryClientProvider client={client}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </QueryClientProvider>\n);\n"],"sourceRoot":""}